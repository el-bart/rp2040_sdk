#!/bin/bash
set -eu -o pipefail
shopt -s nullglob

app=$(basename "$0")
app_dir=$(dirname "$(readlink -e "$0")")
vcs_root=$( { git rev-parse --show-toplevel | xargs dirname ; } 2>/dev/null || dirname "$app_dir")
image="$(sed "s%^$vcs_root/%%" <<< "$app_dir" | tr '/.\- &' '_' | tr '[:upper:]' '[:lower:]')_rp2040_sdk"

docker build -t "$image" "$app_dir/sdk/"

flags=()

if tty -s > /dev/null
then
  flags+=(-it)
fi
flags+=(--rm)

flags+=(-u "$(id -u):$(id -g)")

#flags+=(--cap-add=SYS_PTRACE)

# make sure to forward current directory 'as is'
flags+=(-v "$PWD:$PWD")
flags+=(-w "$PWD")
# also add as a common path, so that builds can easily be made reproducible
flags+=(-v "$PWD:/mnt")

# forward programmer device
picoprog=$(lsusb -d 2e8a:000c | grep 2e8a:000c | tr -d : | awk '{ print $2, $4 }' | sed -e 's#^#/dev/bus/usb #' | tr ' ' /)
if [ -e "$picoprog" ]
then
  echo "$app: found $picoprog picoprog device"
  flags+=(--device "$picoprog")
  flags+=(--group-add "$(stat -c %g "$picoprog")")
else
  echo "$app: failed to find picoprog - skipping" >&2
fi

# forwarding USB serial port (if present)
for serial in /dev/serial/by-id/usb-Raspberry_Pi_Picoprobe_CMSIS-DAP*
do
  dev=$(readlink -e "$serial")
  echo "$app: found $dev serial port"
  flags+=(--device "$dev")
  flags+=(--group-add "$(stat -c %g "$dev")")
done

exec docker run "${flags[@]}" "$image" "$@"
